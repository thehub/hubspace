#install python2.5
#install from apt: postgresql, apache2, python-psycopg2, htmldoc, sqlite3, python-pysqlite2 (for backward compatibility), python-ldap, gcj, libxml2-dev, libxslt1-dev
#edit /etc/postgresql/8.3/main/pg_hba.conf and replace:
#"local   all         all                               ident sameuser"
#with 
#"local   all         all                               md5"
#add a database to postgres
#add a user to postgres
#grant all permissions on the database to the user
#edit dev.cfg replacing dbnmae, username and password in : sqlobject.dburi="postgres://username:password@localhost/dbname" and rep

#easy_install zc.buildout
#from space/bin/buildout run "buildout"
#if you get an error with setuptools do: "easy_install -m setuptools"

#Install pylucene -- this is the slightly hard bit - this works for 32bit ubuntu ignore the crap about copying gcj libs to /usr/local/lib
#http://downloads.osafoundation.org/PyLucene/linux/ubuntu/7.04/PyLucene-2.2.0-1.tar.gz
#cp -r PyLucene-2.2.0.1/python/* $PYTHONLIBDIR/site-packages  


#START THE SERVER
#./bin/kidc hubspace/templates
#./bin/run_hubspace.py
#
#
#
#Setting up openldap
#
#    * Install packages: slapd, ?
#    *  Source


#svn co http://dev.the-hub.net/svn/hubplus/ldap
#sudo bash
#cd trunk
#cat slapd.conf > /etc/ldap/slapd.conf
#cp slapd-acls.conf /etc/ldap
#cp hubplus.schema /etc/ldap/schema
#use " slappasswd" to create a passwordhash, put then the one line "rootpw  {SSHA}....." into the /etc/ldap/slapd-password.conf
#For quick dev setup ask me for above file.
#cd sample
#sh reinstall-ldapdb.sh


[buildout]
parts		= ruledispatch turbogears turbofeeds kid smbpasswd zlib libjpeg PIL hubspacescripts applyruledispatch PyCairo
develop 	= .
hooks		= ${buildout:directory}/hooks
#eggs-directory  = ${buildout:directory}/../eggs
#find-links  = http://cloud.github.com/downloads/thehub/syncer/syncer-0.5.2-py2.5.egg
 
#[syncer]
#recipe = zc.recipe.egg
#eggs   = syncer

[turbogears]
recipe          = zc.recipe.egg:scripts
eggs 		= TurboGears==1.0.9

[ruledispatch]
recipe          = zc.recipe.egg:custom
find-links  	= http://peak.telecommunity.com/snapshots/RuleDispatch-0.5a1.dev-r2618.tar.gz
eggs 		= RuleDispatch

[applyruledispatch]
recipe          = collective.recipe.patch
patches 	= dependency_src/ruledispatch_0.5a.svn20080510-3ubuntu2.debdiff
egg 		= RuleDispatch

[turbofeeds]
recipe		= infrae.subversion
urls 		= http://svn.turbogears.org/projects/TurboFeeds/trunk TurboFeeds
as_eggs 	= true


[hubspacescripts]
recipe          = zc.recipe.egg:scripts 
eggs 		= nose
                  hubspace
[kid]
recipe          = zc.recipe.egg:scripts 
eggs 		= kid

[smbpasswd]
recipe          = zc.recipe.egg:custom
find-links  	= http://barryp.org/static/software/download/py-smbpasswd/1.0.1/py-smbpasswd-1.0.1.tar.gz
egg 		= py-smbpasswd

[zlib]
recipe          = hexagonit.recipe.cmmi
url             = http://zlib.net/zlib-1.2.5.tar.gz
md5hash         = debc62758716a169df9f62e6ab2bc634
make-targets    = install

[libjpeg]
recipe          = hexagonit.recipe.cmmi
url             = http://www.ijg.org/files/jpegsrc.v7.tar.gz
configure-options = CFLAGS="-fPIC -I${zlib:location}/include -L${zlib:location}/lib"
pre-make-hook   = ${buildout:hooks}/libjpeg.py:premake
make-targets    = install
#                  install-lib
#                  install-headers

[PIL]     
recipe          = zc.recipe.egg:custom
egg             = PIL==1.1.6
find-links      = http://dist.repoze.org/PIL-1.1.6.tar.gz
include-dirs    = ${libjpeg:location}/include
                  ${zlib:location}/include
library-dirs    = ${libjpeg:location}/lib
                  ${zlib:location}/lib
rpath           = ${libjpeg:location}/lib
                  ${zlib:location}/lib

[PyCairo]
recipe          = zc.recipe.egg:custom
find-links  	= http://www.cairographics.org/releases/py2cairo-1.8.10.tar.gz
egg 		= py2cairo
